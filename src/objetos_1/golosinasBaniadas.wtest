import golosinas.*

describe "test de baniadas" {

	test "tuttifrutti baniada" {
		golosinaBaniada.baniaA(tuttifrutti)
		assert.equals(9, golosinaBaniada.peso())
		assert.equals(12, golosinaBaniada.precio())
		tuttifrutti.conGluten(true)
		assert.equals(9,golosinaBaniada.precio())
		golosinaBaniada.mordisco()
		assert.equals(7, golosinaBaniada.peso())
		golosinaBaniada.mordisco()
		assert.equals(5, golosinaBaniada.peso())
		assert.that(golosinaBaniada.libreGluten())
		}
		
	test "chocolatin baniado" {
		golosinaBaniada.baniaA(chocolatin)
		chocolatin.pesoInicial(40)
		assert.equals(44, golosinaBaniada.peso())
		assert.equals(22, golosinaBaniada.precio())
		golosinaBaniada.mordisco()
		assert.equals(40, golosinaBaniada.peso())
		golosinaBaniada.mordisco()
		assert.equals(36, golosinaBaniada.peso())
		assert.notThat(golosinaBaniada.libreGluten())
		}
	test "chocolatin2 baniado" {
		golosinaBaniada.baniaA(chocolatin)
		chocolatin.pesoInicial(100)
		assert.equals(104, golosinaBaniada.peso())
		assert.equals(52, golosinaBaniada.precio())
		golosinaBaniada.mordisco()
		assert.equals(100, golosinaBaniada.peso())
		golosinaBaniada.mordisco()
		assert.equals(96, golosinaBaniada.peso())
		assert.notThat(golosinaBaniada.libreGluten())
		}
	test "chupetin baniado" {
		golosinaBaniada.baniaA(chupetin)
		assert.equals(11, golosinaBaniada.peso())
		assert.equals(4, golosinaBaniada.precio())
		golosinaBaniada.mordisco() 
		assert.equals(8.3, golosinaBaniada.peso())
		golosinaBaniada.mordisco()
		assert.equals(5.67, golosinaBaniada.peso())
		assert.that(golosinaBaniada.libreGluten())
	}	
}